version: "3.9"

services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: rho_api
    restart: unless-stopped
    environment:
      # The backend will read RHO_DATA_DIR to persist state; we mount the host dir to this path.
      - RHO_DATA_DIR=/app/data
      - PORT=8000
      # Optional: EMBED_URL can point to a local embedding bridge or external service
      # - EMBED_URL=http://embeddings:5000/embed
    volumes:
      # Persist API state and packs between restarts (host bind for simple local dev).
      - ./api/data:/app/data
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/healthz || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: rho_web
    restart: unless-stopped
    environment:
      # Vite/nginx build can reference this at build time if needed (VITE_API_BASE)
      - VITE_API_BASE=/api
    depends_on:
      - api
    ports:
      - "8080:80"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost/healthz || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

# Optional: you can add a reverse-proxy service (Caddy/Nginx) here if you want TLS termination on the host.
# For a simple demo the `web` service already serves static files and forwards /api to the `api` service (see web/Dockerfile and deploy/nginx/nginx.conf).
#
# Example proxy service (commented):
# proxy:
#   image: caddy:2
#   container_name: rho_proxy
#   restart: unless-stopped
#   ports:
#     - "80:80"
#     - "443:443"
#   volumes:
#     - ./deploy/Caddyfile:/etc/caddy/Caddyfile
#     - caddy_data:/data
#     - caddy_config:/config
#   depends_on:
#     - api
#     - web

# Named volumes (if you'd rather use Docker-managed volumes instead of bind mounts)
volumes:
  # api_data:
  # caddy_data:
  # caddy_config:
  # Keep empty if using bind mounts (./api/data) for easier local debugging.
  {}
