user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Basic logging format
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log main;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    types_hash_max_size 2048;

    # Gzip for better transfer of static assets
    gzip on;
    gzip_min_length 256;
    gzip_proxied any;
    gzip_comp_level 5;
    gzip_types
        text/plain
        text/css
        application/json
        application/javascript
        text/xml
        application/xml
        application/xml+rss
        image/svg+xml;

    # Larger request bodies for file uploads (adjust if necessary)
    client_max_body_size 20m;

    # Default server: serves the built SPA/static files and optionally proxies /api to backend
    server {
        listen       80 default_server;
        server_name  _;

        # Root where static site is placed by the build stage
        root   /usr/share/nginx/html;
        index  index.html index.htm;

        # Serve pre-compressed brotli/gzip if present (optional)
        # try_files $uri $uri/ /index.html;

        # SPA routing: fallback to index.html for client-side routes
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Static asset caching
        location ~* \.(?:css|js|json|xml|jpg|jpeg|gif|png|svg|ico|woff2?|ttf|eot)$ {
            try_files $uri =404;
            expires 7d;
            add_header Cache-Control "public, immutable";
        }

        # API proxy - forward requests under /api/ to the backend service.
        # In docker-compose, the API is typically reachable at host "api:8000".
        # If you use a different hostname/port, update proxy_pass accordingly.
        location /api/ {
            proxy_pass http://api:8000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Websocket / long-polling support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            # Preserve keepalive
            proxy_set_header Connection "";
            proxy_read_timeout 90;
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
        }

        # Health endpoint served by static file if present, otherwise return 204
        location = /healthz {
            # Try static file healthz if present; otherwise return simple 204
            try_files /healthz /healthz.txt =204;
        }

        # Deny access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Error pages
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            internal;
            root /usr/share/nginx/html;
        }
    }
}
